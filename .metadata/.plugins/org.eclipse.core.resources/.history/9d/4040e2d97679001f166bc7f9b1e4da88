#include "nrf24_hal.h"


// Configure the GPIO lines of the nRF24L01 transceiver
// note: IRQ pin must be configured separately
void nRF24_GPIO_Init(void) {
    GPIO_InitTypeDef PORT;

	// Configure CE pin
	PORT.GPIO_Pin = NRF24L01P_CE_PIN_NUMBER;
	GPIO_Init(NRF24L01P_CE_PIN_PORT, &PORT);
	nRF24_CE_L;
}

// Low level SPI transmit/receive function (hardware depended)
// input:
//   data - value to transmit via SPI
// return: value received from SPI
uint8_t nRF24_LL_RW(uint8_t data) {
	 // Wait until TX buffer is empty
	while (SPI_I2S_GetFlagStatus(NRF24L01P_SPI, SPI_I2S_FLAG_TXE) == RESET);
	// Send byte to SPI (TXE cleared)
	SPI_I2S_SendData(NRF24L01P_SPI, data);
	// Wait while receive buffer is empty
	while (SPI_I2S_GetFlagStatus(NRF24L01P_SPI, SPI_I2S_FLAG_RXNE) == RESET);

	// Return received byte
	return (uint8_t)SPI_I2S_ReceiveData(NRF24L01P_SPI);
}
